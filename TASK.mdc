Camera Controls Task Plan

Goal: Update camera behavior to a default angled orbit view, auto-framing based on module dimensions, and disable pan/dolly while restoring to default after user interaction.

Scope (services/frontend-react)

1. state/Config.ts

- Add default camera configuration constants (30째 azimuth, 60째 polar).
- Export a pure function `frameModuleForCamera(dimensions, aspect, fovDeg)` returning `{ target, position, azimuth, polar, distance }` that centers and frames the object using the default angles.

2. scenes/ProductCanvas.tsx

- Accept a `moduleStore` prop (Zustand) to read dimensions.
- On mount and when canvas size or dimensions change, compute framing via `frameModuleForCamera` and apply using Drei CameraControls `setLookAt`.
- Disable pan and dolly: map mouse and touch actions to ROTATE only; disable wheel/pinch.
- Save state after applying default framing and reset to it on orbit end.
- Also reset framing after in-app interactions end (when `isInteracting` flips to false).

3. App.tsx

- Pass the module store instance down to `<ProductCanvas />` via `moduleStore` prop.

4. PanelConfigurator

- No direct changes required; camera reframing is triggered by store `dimensions` changes observed by `ProductCanvas`.

Validation

- Default camera starts 30째 to side and 30째 up, centered on module.
- Resizing via panel updates camera framing smoothly.
- Pan and dolly are disabled; orbit ends snap back to default framing.
- Code follows latest TypeScript + ESLint rules and uses rem in DOM where applicable.
